class l{constructor(e={}){this.config={apiBasePath:e.apiBasePath||"/api",projectRoot:e.projectRoot||process.cwd()},this.state={authenticated:!1,variables:[],snapshots:[],currentTab:"variables"}}async init(){await this.checkAuthStatus(),this.state.authenticated&&await this.loadData()}async checkAuthStatus(){try{const t=await(await fetch(`${this.config.apiBasePath}/auth`)).json();return this.state.authenticated=t.authenticated,this.state.authenticated}catch(e){return console.error("Auth check failed:",e),this.state.authenticated=!1,!1}}async authenticate(e){try{return(await(await fetch(`${this.config.apiBasePath}/auth`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({password:e})})).json()).success?(this.state.authenticated=!0,await this.loadData(),!0):!1}catch(t){return console.error("Login failed:",t),!1}}async loadData(){await this.loadVariables()}async loadVariables(){try{const t=await(await fetch(`${this.config.apiBasePath}/variables`)).json();return this.state.variables=t,this.state.variables}catch(e){return console.error("Failed to load variables:",e),[]}}async saveVariable(e){try{const a=this.state.variables.some(n=>n.name===e.name)?"PUT":"POST";return(await fetch(`${this.config.apiBasePath}/variables`,{method:a,headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).ok?(await this.loadVariables(),!0):!1}catch(t){return console.error("Failed to save variable:",t),!1}}async deleteVariable(e){try{return(await fetch(`${this.config.apiBasePath}/variables`,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e})})).ok?(await this.loadVariables(),!0):!1}catch(t){return console.error("Failed to delete variable:",t),!1}}async exportEnvExample(){try{const e=await fetch(`${this.config.apiBasePath}/export`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({type:"env-example"})});return e.ok?await e.json():{success:!1,message:(await e.json()).error}}catch(e){return console.error("Export failed:",e),{success:!1,message:"Failed to export .env.example"}}}async exportEnv(e){try{const t=await fetch(`${this.config.apiBasePath}/export`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({type:"env",password:e})});return t.ok?await t.json():{success:!1,message:(await t.json()).error}}catch(t){return console.error("Export failed:",t),{success:!1,message:"Failed to export .env"}}}async loadSnapshots(){try{const t=await(await fetch(`${this.config.apiBasePath}/snapshots`)).json();return this.state.snapshots=t,this.state.snapshots}catch(e){return console.error("Failed to load snapshots:",e),[]}}async createSnapshot(e,t){try{return(await fetch(`${this.config.apiBasePath}/snapshots`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e,description:t})})).ok?(await this.loadSnapshots(),!0):!1}catch(a){return console.error("Failed to create snapshot:",a),!1}}async restoreSnapshot(e){try{return(await fetch(`${this.config.apiBasePath}/snapshots/${e}/restore`,{method:"POST"})).ok?(await this.loadVariables(),await this.loadSnapshots(),!0):!1}catch(t){return console.error("Failed to restore snapshot:",t),!1}}async deleteSnapshot(e){try{return(await fetch(`${this.config.apiBasePath}/snapshots/${e}`,{method:"DELETE"})).ok?(await this.loadSnapshots(),!0):!1}catch(t){return console.error("Failed to delete snapshot:",t),!1}}async loadProjectStatus(){try{return await(await fetch(`${this.config.apiBasePath}/project/status`)).json()}catch(e){return console.error("Failed to load project status:",e),null}}async getVariableConfig(e){try{const t=await fetch(`${this.config.apiBasePath}/project/variable-config`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({variableName:e})});return t.ok?await t.json():null}catch(t){return console.error("Failed to get variable config:",t),null}}get isAuthenticated(){return this.state.authenticated}get variables(){return this.state.variables}get snapshots(){return this.state.snapshots}get currentTab(){return this.state.currentTab}set currentTab(e){this.state.currentTab=e}getFilteredVariables(e="",t=""){return this.state.variables.filter(a=>{const s=a.name.toLowerCase().includes(e.toLowerCase())||a.description&&a.description.toLowerCase().includes(e.toLowerCase()),n=!t||a.category===t;return s&&n})}getVariablesByCategory(){const e={};for(const t of this.state.variables){const a=t.category||"Other";e[a]||(e[a]=[]),e[a].push(t)}return e}generateSecret(e=32){const t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let a="";for(let s=0;s<e;s++)a+=t.charAt(Math.floor(Math.random()*t.length));return a}}new l;class d{constructor(e){this.envManager=e}init(){this.setupEventListeners(),this.initAuth()}async initAuth(){const e=await this.envManager.checkAuthStatus();this.updateAuthStatus(e),e&&(this.showMainSection(),await this.loadData())}setupEventListeners(){this.addFormListener("loginForm",async e=>{await this.envManager.authenticate(e.password)?(this.updateAuthStatus(!0),this.showMainSection(),await this.loadData()):alert("Invalid password")}),document.querySelectorAll(".tab-button").forEach(e=>{e.addEventListener("click",t=>{const a=t.target;this.switchTab(a.dataset.tab||"variables")})}),this.addClickListener("addVariableBtn",()=>this.showVariableModal()),this.addFormListener("variableForm",e=>this.handleVariableSubmit(e)),this.addClickListener(".close",()=>this.hideModal("variableModal")),this.addClickListener("cancelBtn",()=>this.hideModal("variableModal")),this.addClickListener(".close-password",()=>this.hideModal("passwordModal")),this.addClickListener("cancelPasswordBtn",()=>this.hideModal("passwordModal")),this.addInputListener("searchFilter",()=>this.filterVariables()),this.addChangeListener("categoryFilter",()=>this.filterVariables()),this.addClickListener("createSnapshotBtn",()=>this.createSnapshot()),this.addClickListener("refreshProjectBtn",()=>this.loadProjectStatus()),this.addClickListener("exportExampleBtn",()=>this.exportEnvExample()),this.addClickListener("exportEnvBtn",()=>this.showModal("passwordModal")),this.addFormListener("passwordForm",e=>this.handlePasswordConfirmation(e))}addClickListener(e,t){const a=document.querySelector(e);a&&a.addEventListener("click",t)}addInputListener(e,t){const a=document.getElementById(e);a&&a.addEventListener("input",t)}addChangeListener(e,t){const a=document.getElementById(e);a&&a.addEventListener("change",t)}addFormListener(e,t){const a=document.getElementById(e);a&&a.addEventListener("submit",async s=>{s.preventDefault();const n=new FormData(a),i={};n.forEach((o,c)=>{i[c]=c==="sensitive"?o==="on":o}),await t(i)})}updateAuthStatus(e){const t=document.getElementById("statusIndicator"),a=document.getElementById("statusText");t&&a&&(t.textContent=e?"🔓":"🔒",a.textContent=e?"Authenticated":"Not Authenticated")}showMainSection(){const e=document.getElementById("loginSection"),t=document.getElementById("mainSection");e&&(e.style.display="none"),t&&(t.style.display="block")}switchTab(e){document.querySelectorAll(".tab-button").forEach(t=>{t.classList.remove("active")}),document.querySelector(`[data-tab="${e}"]`)?.classList.add("active"),document.querySelectorAll(".tab-content").forEach(t=>{t.classList.remove("active")}),document.getElementById(`${e}Tab`)?.classList.add("active"),this.envManager.currentTab=e,e==="snapshots"?this.loadSnapshots():e==="project"&&this.loadProjectStatus()}async loadData(){await this.loadVariables(),this.envManager.currentTab==="snapshots"?await this.loadSnapshots():this.envManager.currentTab==="project"&&await this.loadProjectStatus()}async loadVariables(){const e=await this.envManager.loadVariables();this.renderVariables(e)}renderVariables(e){const t=document.getElementById("variablesList");if(!t)return;t.innerHTML="",this.getFilteredVariables(e).forEach(s=>{const n=this.createVariableItem(s);t.appendChild(n)})}createVariableItem(e){const t=document.createElement("div");t.className="variable-item";const a=e.sensitive?"*".repeat(Math.min(e.value.length,20)):e.value;return t.innerHTML=`
      <div class="variable-info">
        <div class="variable-name">${e.name}</div>
        <div class="variable-value">${a}</div>
        <div class="variable-meta">
          Category: ${e.category||"Other"} | 
          ${e.sensitive?"Sensitive":"Public"} |
          Updated: ${new Date(e.updatedAt).toLocaleDateString()}
        </div>
      </div>
      <div class="variable-actions">
        <button class="btn-secondary edit-btn" data-name="${e.name}">Edit</button>
        <button class="btn-danger delete-btn" data-name="${e.name}">Delete</button>
      </div>
    `,t.querySelector(".edit-btn")?.addEventListener("click",()=>{this.editVariable(e.name)}),t.querySelector(".delete-btn")?.addEventListener("click",()=>{this.deleteVariable(e.name)}),t}getFilteredVariables(e){const t=document.getElementById("searchFilter"),a=document.getElementById("categoryFilter"),s=t?.value.toLowerCase()||"",n=a?.value||"";return this.envManager.getFilteredVariables(s,n)}filterVariables(){this.loadVariables()}showVariableModal(e){const t=document.getElementById("variableModal"),a=document.getElementById("variableForm"),s=document.getElementById("modalTitle");!t||!a||!s||(e?(s.textContent="Edit Variable",this.fillVariableForm(e)):(s.textContent="Add Variable",a.reset(),document.getElementById("varName").readOnly=!1),this.showModal("variableModal"))}fillVariableForm(e){document.getElementById("varName").value=e.name,document.getElementById("varValue").value=e.value,document.getElementById("varCategory").value=e.category||"other",document.getElementById("varDescription").value=e.description||"",document.getElementById("varSensitive").checked=e.sensitive||!1,document.getElementById("varName").readOnly=!0}async handleVariableSubmit(e){await this.envManager.saveVariable(e)?(this.hideModal("variableModal"),await this.loadVariables()):alert("Failed to save variable")}async editVariable(e){const t=this.envManager.variables.find(a=>a.name===e);t&&this.showVariableModal(t)}async deleteVariable(e){if(!confirm(`Are you sure you want to delete ${e}?`))return;await this.envManager.deleteVariable(e)?await this.loadVariables():alert("Failed to delete variable")}async loadSnapshots(){const e=await this.envManager.loadSnapshots();this.renderSnapshots(e)}renderSnapshots(e){const t=document.getElementById("snapshotsList");t&&(t.innerHTML="",e.forEach(a=>{const s=this.createSnapshotItem(a);t.appendChild(s)}))}createSnapshotItem(e){const t=document.createElement("div");return t.className="snapshot-item",t.innerHTML=`
      <div class="snapshot-info">
        <div class="snapshot-name">${e.name}</div>
        <div class="snapshot-meta">
          ${e.description} | 
          ${e.variables.length} variables |
          Created: ${new Date(e.createdAt).toLocaleDateString()}
        </div>
      </div>
      <div class="snapshot-actions">
        <button class="btn-secondary restore-btn" data-id="${e.id}">Restore</button>
        <button class="btn-danger delete-snapshot-btn" data-id="${e.id}">Delete</button>
      </div>
    `,t.querySelector(".restore-btn")?.addEventListener("click",()=>{this.restoreSnapshot(e.id)}),t.querySelector(".delete-snapshot-btn")?.addEventListener("click",()=>{this.deleteSnapshot(e.id)}),t}async createSnapshot(){const e=prompt("Snapshot name:");if(!e)return;const t=prompt("Description (optional):")||"";await this.envManager.createSnapshot(e,t)?await this.loadSnapshots():alert("Failed to create snapshot")}async restoreSnapshot(e){if(!confirm("Are you sure you want to restore this snapshot? Current variables will be backed up."))return;await this.envManager.restoreSnapshot(e)?(await this.loadVariables(),await this.loadSnapshots(),alert("Snapshot restored successfully")):alert("Failed to restore snapshot")}async deleteSnapshot(e){if(!confirm("Are you sure you want to delete this snapshot?"))return;await this.envManager.deleteSnapshot(e)?await this.loadSnapshots():alert("Failed to delete snapshot")}async loadProjectStatus(){const e=await this.envManager.loadProjectStatus();this.renderProjectStatus(e)}renderProjectStatus(e){const t=document.getElementById("projectStatus");if(!t)return;if(t.innerHTML="",!e){t.innerHTML="<p>No project configuration found</p>";return}const a=this.createOverallStatus(e);t.appendChild(a),Object.values(e.groups).forEach(s=>{const n=this.createGroupStatus(s);t.appendChild(n)})}createOverallStatus(e){const t=document.createElement("div");return t.className=`status-group ${e.isValid?"valid":"invalid"}`,t.innerHTML=`
      <div class="group-header">
        <div class="group-name">Overall Project Status</div>
        <div class="group-status ${e.canStart?"valid":"invalid"}">
          ${e.canStart?"Ready to Start":"Not Ready"}
        </div>
      </div>
      <p>Project: ${e.projectName}</p>
      <p>Missing variables: ${e.missing.length}</p>
      <p>Invalid variables: ${e.invalid.length}</p>
    `,t}createGroupStatus(e){const t=document.createElement("div");return t.className=`status-group ${e.configured?"valid":"invalid"}`,t.innerHTML=`
      <div class="group-header">
        <div class="group-name">${e.name}</div>
        <div class="group-status ${e.configured?"valid":"invalid"}">
          ${e.configured?"Configured":"Missing Variables"}
        </div>
      </div>
      <div class="variable-status">
        ${e.variables.map(a=>`
          <div class="variable-status-item ${a.valid?"valid":"invalid"}">
            <div class="variable-info">
              <span class="variable-name">${a.name}</span>
              ${a.errors.length>0?`<span class="variable-errors">${a.errors.join(", ")}</span>`:""}
            </div>
            <div class="variable-actions">
              <span class="status-icon">${a.valid?"✅":"❌"}</span>
            </div>
          </div>
        `).join("")}
      </div>
    `,t}async exportEnvExample(){const e=await this.envManager.exportEnvExample();e.success?alert("✅ "+e.message):alert("Failed to export .env.example: "+e.message)}async handlePasswordConfirmation(e){const t=await this.envManager.exportEnv(e.password);t.success?(this.hideModal("passwordModal"),alert("✅ "+t.message+`

⚠️ Remember to set ENV_MANAGER_ENABLED=false in your config to use the exported .env file!`)):alert("Failed to export .env: "+t.message)}showModal(e){const t=document.getElementById(e);t&&(t.style.display="block")}hideModal(e){const t=document.getElementById(e);t&&(t.style.display="none")}}document.addEventListener("DOMContentLoaded",()=>{const r=new l({apiBasePath:"/api"}),e=new d(r);window.envManager=r,window.uiManager=e,e.init()});
